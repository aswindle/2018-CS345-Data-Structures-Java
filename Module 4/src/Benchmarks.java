/**
 * @File: Benchmarks.java
 * 
 * Performs benchmark tests on a variety of arrays
 * 
 * @Author Alex Swindle
 * @Email aswindle@email.arizona.edu
 * 
 * @Date: Mar 5, 2018
 * @Last modified: 6:02:33 PM
 */

public class Benchmarks {
	/**
	 * Print out data about how long both merge and quick sort take to run and
	 * how many operations and function calls they use for a given array
	 * 
	 * Merge must be called first as it isn't in-place, but quick is
	 * 
	 * @param list
	 * @author Alex Swindle
	 * @email aswindle@email.arizona.edu
	 */
	public static void benchmark(String varName, int[] list) {
		// Values to calculate elapsed system time
		long start;
		long stop;

		// Merge Sort data
		// Reset counts of operations and calls, calculate elapsed time, print
		// results
		System.out.println("Results for " + varName + ":");
		SortingAlgorithms.operations = 0;
		SortingAlgorithms.calls = 0;
		start = System.nanoTime();
		SortingAlgorithms.mergeSort(list);
		stop = System.nanoTime();
		System.out.printf("***Merge Sort:***\n%d nanoseconds\n%d calls\n%d operations\n", (int) (stop - start),
				SortingAlgorithms.calls, SortingAlgorithms.operations);

		System.out.println();

		// Quick Sort data
		// Reset counts of operations and calls, calculate elapsed time, print
		// results
		SortingAlgorithms.operations = 0;
		SortingAlgorithms.calls = 0;
		start = System.nanoTime();
		SortingAlgorithms.quicksort(list, 0, list.length - 1);
		stop = System.nanoTime();
		System.out.printf("***Quick Sort:***\n%d nanoseconds\n%d calls\n%d operations\n", (int) (stop - start),
				SortingAlgorithms.calls, SortingAlgorithms.operations);

		System.out.println("------------------------------");
	}

	/**
	 * Test a bunch of arrays
	 * 
	 * @param args
	 * @author Alex Swindle
	 * @email aswindle@email.arizona.edu
	 */
	public static void main(String[] args) {
		/*
		 * Sorted Forwards
		 */
		System.out.println("-----SORTED-----");
		int[] sorted10 = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };
		benchmark("sorted10", sorted10);

		int[] sorted100 = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
				25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
				51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
				77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99 };
		benchmark("sorted100", sorted100);

		int[] sorted500 = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
				25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
				51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
				77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
				102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
				123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
				144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
				165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
				186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
				207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
				228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
				249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
				270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290,
				291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311,
				312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
				333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353,
				354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374,
				375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395,
				396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
				417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
				438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
				459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
				480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499 };
		benchmark("sorted500", sorted500);

		/*
		 * Sorted in Reverse
		 */
		System.out.println("-----REVERSED-----");
		int[] back10 = { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 };
		benchmark("back10", back10);

		int[] back100 = { 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78,
				77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52,
				51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26,
				25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 };
		benchmark("back100", back100);

		int[] back500 = { 500, 499, 498, 497, 496, 495, 494, 493, 492, 491, 490, 489, 488, 487, 486, 485, 484, 483, 482,
				481, 480, 479, 478, 477, 476, 475, 474, 473, 472, 471, 470, 469, 468, 467, 466, 465, 464, 463, 462, 461,
				460, 459, 458, 457, 456, 455, 454, 453, 452, 451, 450, 449, 448, 447, 446, 445, 444, 443, 442, 441, 440,
				439, 438, 437, 436, 435, 434, 433, 432, 431, 430, 429, 428, 427, 426, 425, 424, 423, 422, 421, 420, 419,
				418, 417, 416, 415, 414, 413, 412, 411, 410, 409, 408, 407, 406, 405, 404, 403, 402, 401, 400, 399, 398,
				397, 396, 395, 394, 393, 392, 391, 390, 389, 388, 387, 386, 385, 384, 383, 382, 381, 380, 379, 378, 377,
				376, 375, 374, 373, 372, 371, 370, 369, 368, 367, 366, 365, 364, 363, 362, 361, 360, 359, 358, 357, 356,
				355, 354, 353, 352, 351, 350, 349, 348, 347, 346, 345, 344, 343, 342, 341, 340, 339, 338, 337, 336, 335,
				334, 333, 332, 331, 330, 329, 328, 327, 326, 325, 324, 323, 322, 321, 320, 319, 318, 317, 316, 315, 314,
				313, 312, 311, 310, 309, 308, 307, 306, 305, 304, 303, 302, 301, 300, 299, 298, 297, 296, 295, 294, 293,
				292, 291, 290, 289, 288, 287, 286, 285, 284, 283, 282, 281, 280, 279, 278, 277, 276, 275, 274, 273, 272,
				271, 270, 269, 268, 267, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 256, 255, 254, 253, 252, 251,
				250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230,
				229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209,
				208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188,
				187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167,
				166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146,
				145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125,
				124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104,
				103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79,
				78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53,
				52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27,
				26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 };
		benchmark("back500", back500);

		/*
		 * Almost Sorted
		 * 
		 * Sorted, but with 5 random elements swapped with the same number from
		 * the other end (ex. 5 with 95)
		 */
		System.out.println("-----ALMOST SORTED-----");
		int[] almostsorted100 = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 87, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
				24, 25, 74, 27, 28, 29, 30, 31, 32, 33, 34, 35, 64, 37, 38, 39, 40, 41, 58, 43, 44, 55, 46, 47, 48, 49,
				50, 51, 52, 53, 54, 45, 56, 57, 42, 59, 60, 61, 62, 63, 36, 65, 66, 67, 68, 69, 70, 71, 72, 73, 26, 75,
				76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 13, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99 };
		benchmark("almostsorted100", almostsorted100);

		int[] almostsorted500 = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
				24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 452, 49,
				450, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 435, 66, 67, 68, 69, 70, 71, 72, 73, 74,
				75, 76, 77, 78, 79, 420, 419, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
				100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 390, 389, 112, 113, 114, 115, 116, 117, 118, 119, 120,
				121, 122, 123, 124, 125, 374, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
				142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
				337, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
				184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 304, 197, 198, 199, 200, 201, 202, 203, 204,
				205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
				226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
				247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
				268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288,
				289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 196, 305, 306, 307, 308, 309,
				310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330,
				331, 332, 333, 334, 335, 336, 163, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351,
				352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372,
				373, 126, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 111, 110, 391, 392, 393,
				394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
				415, 416, 417, 418, 81, 80, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 65,
				436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 50, 451, 48, 453, 454, 455, 456,
				457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
				478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
				499 };
		benchmark("almostsorted500", almostsorted500);

		int[] almostbackward100 = { 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 10, 89, 88, 87, 86, 85, 84, 83, 82, 19, 80,
				79, 78, 77, 76, 25, 26, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 38, 61, 60, 59, 58, 57, 56, 55, 54,
				53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 62, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28,
				27, 74, 75, 24, 23, 22, 21, 20, 81, 18, 17, 16, 15, 14, 13, 12, 11, 90, 9, 8, 7, 6, 5, 4, 3, 2, 1 };
		benchmark("almostbackward100", almostbackward100);

		int[] almostbackward500 = { 500, 499, 498, 497, 496, 495, 494, 493, 492, 491, 490, 489, 12, 487, 486, 485, 484,
				483, 482, 481, 480, 479, 478, 477, 476, 475, 474, 473, 472, 471, 470, 469, 468, 33, 466, 465, 464, 37,
				38, 461, 460, 459, 458, 457, 456, 455, 454, 453, 452, 451, 450, 449, 448, 447, 446, 445, 444, 443, 442,
				441, 440, 439, 438, 437, 436, 65, 434, 433, 432, 431, 430, 429, 428, 427, 426, 425, 424, 423, 422, 421,
				420, 419, 418, 417, 416, 415, 414, 413, 88, 411, 410, 409, 408, 407, 406, 405, 404, 403, 402, 401, 400,
				399, 398, 397, 396, 395, 394, 393, 392, 391, 390, 389, 388, 387, 386, 385, 384, 383, 382, 381, 380, 379,
				378, 377, 376, 375, 374, 373, 372, 371, 370, 369, 368, 367, 366, 365, 364, 363, 362, 361, 360, 359, 142,
				357, 356, 355, 354, 353, 352, 351, 350, 349, 348, 347, 346, 345, 344, 343, 342, 159, 340, 339, 338, 337,
				336, 335, 334, 333, 332, 331, 330, 329, 328, 327, 326, 325, 324, 323, 322, 321, 320, 319, 318, 317, 316,
				315, 314, 313, 312, 311, 310, 309, 308, 307, 306, 305, 304, 303, 302, 301, 300, 299, 298, 297, 296, 295,
				294, 293, 292, 291, 210, 289, 288, 287, 286, 285, 284, 283, 282, 281, 280, 279, 278, 277, 276, 275, 274,
				273, 272, 271, 270, 269, 268, 267, 266, 265, 264, 263, 262, 239, 260, 259, 258, 257, 256, 255, 254, 253,
				252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 261, 238, 237, 236, 235, 234, 233, 232,
				231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211,
				290, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190,
				189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169,
				168, 167, 166, 165, 164, 163, 162, 161, 160, 341, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148,
				147, 146, 145, 144, 143, 358, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127,
				126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106,
				105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 412, 87, 86, 85, 84, 83, 82,
				81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 435, 64, 63, 62, 61, 60, 59, 58, 57, 56,
				55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 462, 463, 36, 35, 34, 467, 32, 31,
				30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 488, 11, 10, 9, 8, 7, 6, 5, 4,
				3, 2, 1 };
		benchmark("almostbackward500", almostbackward500);

		/*
		 * Randomized
		 */
		System.out.println("-----RANDOMIZED-----");
		int[] random10 = { 7, 9, 9, 7, 1, 4, 5, 1, 2, 8 };
		benchmark("random10", random10);

		int[] random100 = { 37, 93, 64, 15, 1, 73, 16, 65, 48, 74, 7, 14, 17, 82, 66, 44, 12, 33, 6, 79, 65, 67, 95, 93,
				35, 74, 32, 64, 69, 79, 96, 77, 11, 34, 70, 17, 29, 78, 84, 46, 97, 63, 10, 47, 1, 91, 8, 24, 98, 96,
				51, 71, 11, 52, 10, 75, 68, 76, 43, 29, 88, 51, 94, 30, 1, 30, 8, 28, 28, 49, 38, 1, 94, 4, 79, 42, 59,
				84, 71, 43, 27, 51, 51, 22, 14, 81, 80, 92, 67, 12, 74, 16, 59, 20, 21, 100, 80, 28, 2, 12 };
		benchmark("random100", random100);

		int[] random200 = { 176, 188, 32, 160, 73, 170, 195, 123, 49, 123, 186, 112, 70, 161, 91, 186, 163, 199, 3, 49,
				149, 100, 110, 51, 62, 107, 92, 186, 133, 39, 73, 162, 157, 12, 103, 101, 0, 143, 182, 192, 133, 48, 74,
				190, 19, 192, 45, 200, 169, 146, 160, 111, 109, 39, 85, 91, 75, 187, 38, 102, 161, 190, 166, 27, 62,
				106, 195, 96, 145, 170, 183, 159, 49, 78, 66, 176, 81, 188, 172, 153, 178, 200, 102, 99, 191, 41, 67,
				180, 116, 145, 65, 183, 189, 44, 4, 93, 86, 3, 131, 13, 71, 23, 104, 42, 110, 117, 93, 6, 39, 6, 39, 71,
				131, 138, 103, 36, 4, 194, 163, 10, 80, 2, 80, 27, 88, 49, 183, 3, 180, 104, 109, 32, 66, 193, 185, 100,
				8, 38, 94, 145, 118, 153, 0, 140, 35, 142, 160, 179, 78, 84, 6, 75, 174, 0, 106, 138, 74, 186, 31, 145,
				120, 54, 104, 35, 158, 154, 107, 145, 123, 61, 125, 26, 72, 90, 195, 65, 196, 39, 0, 64, 192, 198, 175,
				88, 44, 81, 57, 159, 184, 182, 33, 125, 118, 128, 110, 189, 198, 83, 27, 192 };
		benchmark("random200", random200);

		int[] random500a = { 173, 239, 357, 143, 134, 431, 304, 93, 217, 411, 318, 33, 484, 87, 283, 344, 483, 353, 175,
				216, 50, 293, 112, 201, 214, 419, 261, 404, 139, 354, 1, 90, 208, 396, 58, 429, 489, 440, 271, 378, 30,
				58, 281, 478, 49, 473, 386, 108, 398, 282, 69, 67, 113, 345, 258, 303, 446, 264, 91, 160, 468, 110, 293,
				329, 207, 347, 54, 467, 462, 102, 416, 63, 471, 74, 180, 215, 488, 23, 117, 200, 308, 102, 311, 160,
				476, 266, 386, 337, 318, 349, 72, 335, 375, 148, 190, 169, 279, 96, 27, 475, 47, 330, 145, 299, 228, 48,
				270, 34, 172, 194, 379, 284, 253, 126, 381, 90, 284, 263, 338, 245, 426, 439, 351, 270, 310, 451, 187,
				254, 296, 328, 45, 202, 168, 50, 387, 131, 229, 470, 254, 346, 215, 277, 221, 184, 211, 410, 345, 70,
				274, 224, 417, 429, 378, 137, 367, 397, 483, 42, 488, 138, 307, 67, 376, 234, 280, 65, 88, 177, 312,
				266, 138, 465, 430, 406, 376, 467, 167, 184, 11, 7, 124, 108, 111, 16, 461, 212, 96, 28, 73, 207, 311,
				303, 349, 343, 28, 290, 278, 32, 34, 251, 17, 201, 414, 176, 68, 32, 153, 40, 335, 157, 465, 61, 27,
				438, 429, 428, 413, 24, 40, 23, 77, 303, 78, 190, 119, 486, 76, 392, 414, 303, 84, 31, 464, 207, 118,
				103, 242, 104, 459, 351, 330, 303, 284, 9, 447, 165, 116, 319, 18, 288, 185, 236, 392, 445, 126, 283,
				469, 364, 64, 476, 123, 490, 477, 213, 146, 411, 200, 239, 248, 64, 112, 195, 304, 277, 171, 300, 29,
				216, 408, 279, 18, 485, 86, 387, 295, 417, 496, 461, 488, 405, 447, 26, 154, 227, 399, 341, 41, 268,
				256, 474, 394, 405, 248, 285, 459, 110, 131, 337, 350, 432, 462, 422, 207, 444, 147, 475, 210, 110, 429,
				3, 72, 399, 444, 329, 292, 257, 381, 60, 416, 495, 210, 429, 46, 120, 390, 47, 183, 250, 44, 40, 296,
				484, 379, 104, 432, 230, 151, 242, 263, 487, 232, 193, 227, 1, 26, 246, 49, 196, 275, 295, 216, 240,
				126, 151, 112, 395, 420, 155, 133, 18, 205, 168, 362, 261, 243, 424, 236, 118, 275, 75, 46, 354, 339,
				121, 413, 420, 357, 374, 8, 344, 247, 25, 105, 29, 372, 353, 5, 203, 83, 182, 474, 6, 256, 455, 113,
				365, 47, 294, 442, 84, 136, 315, 265, 348, 494, 488, 491, 144, 6, 244, 480, 359, 412, 18, 71, 200, 339,
				297, 445, 212, 63, 162, 181, 94, 108, 247, 49, 161, 483, 12, 382, 458, 62, 298, 317, 168, 123, 31, 250,
				84, 101, 487, 33, 406, 316, 179, 177, 64, 278, 375, 296, 44, 48, 27, 401, 294, 421, 478, 124, 425, 474,
				352, 454, 244, 354, 466, 33, 286, 218, 309, 488, 266, 286, 137, 133, 425, 422, 9, 226, 64, 18, 493, 374,
				325, 148, 12, 323, 144, 354, 138 };
		benchmark("random500a", random500a);

		int[] random500b = { 476, 272, 295, 491, 241, 234, 225, 150, 335, 274, 477, 20, 477, 134, 220, 341, 453, 33, 41,
				432, 271, 153, 310, 346, 118, 395, 322, 178, 281, 247, 368, 105, 478, 165, 0, 110, 215, 304, 450, 226,
				453, 218, 257, 369, 26, 428, 301, 3, 100, 190, 176, 339, 313, 349, 446, 47, 43, 149, 287, 78, 353, 442,
				456, 404, 84, 491, 96, 163, 7, 421, 74, 37, 0, 316, 482, 499, 136, 122, 406, 8, 144, 67, 21, 487, 38,
				127, 105, 71, 63, 162, 90, 379, 491, 123, 476, 78, 405, 413, 459, 441, 47, 492, 62, 459, 96, 464, 179,
				351, 18, 234, 278, 98, 98, 143, 77, 274, 410, 98, 382, 146, 308, 56, 18, 279, 471, 382, 84, 249, 139,
				119, 420, 355, 186, 323, 115, 397, 152, 281, 294, 269, 124, 29, 279, 234, 96, 5, 168, 23, 310, 124, 498,
				264, 110, 434, 130, 303, 493, 415, 499, 269, 491, 370, 9, 154, 193, 25, 335, 268, 177, 248, 299, 381,
				97, 272, 20, 371, 300, 10, 492, 119, 454, 367, 404, 369, 122, 209, 412, 291, 145, 51, 370, 195, 359,
				232, 296, 222, 68, 176, 493, 290, 108, 30, 214, 38, 112, 409, 138, 331, 202, 268, 175, 478, 162, 52,
				292, 316, 155, 62, 138, 497, 305, 480, 171, 0, 23, 325, 446, 78, 133, 212, 313, 104, 41, 274, 104, 164,
				421, 162, 302, 138, 229, 56, 100, 74, 300, 486, 132, 500, 308, 42, 429, 101, 408, 103, 126, 369, 160,
				462, 405, 209, 38, 159, 141, 264, 373, 11, 195, 208, 414, 213, 111, 493, 357, 2, 465, 96, 28, 173, 287,
				416, 48, 96, 84, 356, 487, 428, 115, 244, 360, 293, 400, 206, 315, 182, 27, 61, 322, 232, 226, 118, 20,
				392, 480, 213, 177, 44, 342, 197, 232, 97, 470, 360, 270, 384, 217, 39, 104, 430, 182, 445, 26, 430,
				454, 434, 139, 51, 209, 78, 154, 158, 287, 26, 374, 8, 468, 370, 371, 488, 266, 398, 469, 254, 479, 137,
				6, 89, 1, 173, 331, 72, 442, 342, 122, 54, 125, 172, 248, 488, 221, 118, 362, 344, 259, 29, 390, 472,
				235, 67, 431, 8, 314, 428, 128, 29, 74, 92, 22, 249, 280, 244, 19, 467, 433, 373, 293, 100, 370, 208,
				500, 449, 267, 134, 430, 480, 451, 340, 247, 273, 282, 271, 382, 94, 345, 290, 100, 246, 146, 264, 489,
				444, 69, 13, 286, 232, 191, 205, 136, 158, 421, 228, 384, 323, 487, 92, 354, 258, 287, 494, 158, 164,
				383, 51, 305, 409, 466, 452, 39, 497, 216, 454, 329, 366, 291, 245, 297, 287, 55, 136, 171, 87, 417,
				413, 491, 392, 68, 350, 377, 296, 26, 185, 202, 279, 114, 453, 438, 103, 172, 418, 99, 432, 455, 158,
				491, 298, 454, 90, 329, 383, 90, 408, 282, 213, 352, 475, 327, 128, 430, 229, 492, 22, 159, 85, 215,
				149, 445, 126, 490, 383, 425, 394 };
		benchmark("random500b", random500b);
	}
}
